//===---- J2ISelDAGToDAG.h - A Dag to Dag Inst Selector for J2 ------------===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//
// This file defines an instruction selector for the J2 target.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_J2_J2ISELDAGTODAG_H
#define LLVM_LIB_TARGET_J2_J2ISELDAGTODAG_H

#include "J2TargetMachine.h"
#include "llvm/CodeGen/SelectionDAGISel.h"

#define GET_INSTRINFO_ENUM
#include "J2GenInstrInfo.inc"

//===----------------------------------------------------------------------===//
// Instruction Selector Implementation
//===----------------------------------------------------------------------===//

//===----------------------------------------------------------------------===//
// J2DAGToDAGISel - J2 specific code to select J2 machine
// instructions for SelectionDAG operations.
//===----------------------------------------------------------------------===//

namespace llvm {

class J2DAGToDAGISel : public SelectionDAGISel {
public:
  explicit J2DAGToDAGISel(J2TargetMachine &TM) : SelectionDAGISel(TM) {}

  // Pass Name
  StringRef getPassName() const override {
    return "J2 DAG->DAG Pattern Instruction Selection";
  }

protected:
// Include the pieces autogenerated from the target description.
#include "J2GenDAGISel.inc"

  void Select(SDNode *N) override;

  template <size_t N>
  bool SelectAddr(SDValue Addr, SDValue &Base, SDValue &Offset);
};
}

#endif
